<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Osmow's Shawarma</title>
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <style>
      body {
        background-image: url("images/OSMOWs_LOGO.jpg");
        background-size: contain;
        background-position: center;
        filter: contrast(1.2) brightness(1);
        background-repeat: no-repeat;
        margin: 0;
        padding: 20px;
        font-family: Arial, sans-serif;
      }
      h1 {
        color: rgb(187, 6, 6);
        font-weight: bold;
        text-align: center;
        padding: 10px;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.7);
        display: inline-block;
        margin: 0 auto;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
      .card {
        border: none;
        padding: 20px;
        text-align: center;
        margin: 10px;
        background: transparent;
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
        transition: transform 0.3s ease-in-out;
      }
      .card:hover {
        transform: translateY(-5px);
      }
      .card img {
        width: 120px;
        height: 120px;
        object-fit: cover;
        border-radius: 5px;
        margin-bottom: 5px;
      }
      .card .card-name {
        margin-bottom: 10px;
        font-size: 1em;
        font-weight: bold;
      }
      .quantity-container {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .quantity-container button {
        background-color: #378fe8dd;
        color: #fff;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        margin: 0 5px;
      }
      .quantity-container input {
        width: 50px;
        text-align: center;
      }
    </style>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <a class="navbar-brand" href="#">Osmow's Shawarma</a>
      <button
        class="navbar-toggler"
        type="button"
        data-toggle="collapse"
        data-target="#navbarNav"
        aria-controls="navbarNav"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ml-auto">
          <li class="nav-item">
            <a class="nav-link" href="/">Home</a>
          </li>
          <% if (user) { %>
          <li class="nav-item">
            <a class="nav-link" href="#"><%= user.name %></a>
          </li>
          <li class="nav-item">
            <a class="nav-link" id="logoutBtn" href="#">Logout</a>
          </li>
          <% } else { %>
          <li class="nav-item">
            <a class="nav-link" href="/login">Login</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/signup">Signup</a>
          </li>
          <% } %>
        </ul>
      </div>
    </nav>
    <div class="container text-center">
      <h1 class="main-title my-4">Osmow's Food Management</h1>
      <div class="mb-4">
        <button class="btn btn-primary mx-2" id="userBtn">User</button>
        <button class="btn btn-primary mx-2" id="managerBtn">Manager</button>
      </div>
      <% if (user && user.role === 'manager') { %>
      <button
        class="btn btn-success mb-4"
        data-toggle="modal"
        data-target="#addProductModal"
      >
        Add Product
      </button>
      <% } %>
      <div class="row justify-content-center" id="grid-container">
        <% items.forEach(item => { %>
        <div class="col-6 col-md-3 col-lg-2 card">
          <img
            src="<%= item.imageUrl %>"
            alt="<%= item.productName %>"
            class="img-fluid"
          />
          <div class="card-name"><%= item.productName %></div>
          <% if (user && user.role === 'manager') { %>
          <div class="quantity-container">
            <button data-id="<%= item._id %>" class="decrement-btn">-</button>
            <input
              type="number"
              value="<%= item.quantity %>"
              min="1"
              class="quantity-input"
              data-id="<%= item._id %>"
            />
            <button data-id="<%= item._id %>" class="increment-btn">+</button>
          </div>
          <button
            class="btn btn-danger btn-sm mt-2 delete-btn"
            data-id="<%= item._id %>"
          >
            <i class="fas fa-trash"></i>
          </button>
          <% } else { %>
          <div class="quantity-container">
            Quantity Available: <%= item.quantity %>
          </div>
          <button
            class="btn btn-success btn-sm mt-2 order-btn"
            data-id="<%= item._id %>"
          >
            Order Now
          </button>
          <% } %>
        </div>
        <% }) %>
      </div>
      <% if (user && user.role === 'manager') { %>
      <button id="reportBtn" class="btn btn-warning mt-4">
        Generate Report
      </button>
      <% } %>
    </div>

    <!-- Add Product Modal -->
    <div
      class="modal fade"
      id="addProductModal"
      tabindex="-1"
      role="dialog"
      aria-labelledby="addProductModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addProductModalLabel">Add Product</h5>
            <button
              type="button"
              class="close"
              data-dismiss="modal"
              aria-label="Close"
            >
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <form id="addProductForm">
              <div class="form-group">
                <label for="productName">Product Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="productName"
                  name="productName"
                  required
                />
              </div>
              <div class="form-group">
                <label for="description">Description</label>
                <textarea
                  class="form-control"
                  id="description"
                  name="description"
                  required
                ></textarea>
              </div>
              <div class="form-group">
                <label for="price">Price</label>
                <input
                  type="number"
                  class="form-control"
                  id="price"
                  name="price"
                  required
                />
              </div>
              <div class="form-group">
                <label for="lowStockLevel">Low Stock Level</label>
                <input
                  type="number"
                  class="form-control"
                  id="lowStockLevel"
                  name="lowStockLevel"
                  required
                />
              </div>
              <div class="form-group">
                <label for="image">Image</label>
                <input
                  type="file"
                  class="form-control"
                  id="image"
                  name="image"
                  required
                />
              </div>
              <button type="submit" class="btn btn-primary">Add Product</button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
      document
        .getElementById("logoutBtn")
        .addEventListener("click", function () {
          document.cookie =
            "jwt=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
          window.location.href = "/login";
        });

      document
        .getElementById("reportBtn")
        ?.addEventListener("click", async () => {
          try {
            const response = await fetch("/api/v1/products/report", {
              method: "POST",
            });
            if (response.status === 200) {
              alert("Report generated and sent successfully.");
            } else {
              alert("Error generating report.");
            }
          } catch (err) {
            console.error("Error generating report:", err);
          }
        });

      document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".decrement-btn").forEach((btn) => {
          btn.addEventListener("click", function (e) {
            e.stopPropagation();
            const id = this.dataset.id;
            updateQuantity(id, "decrement");
          });
        });

        document.querySelectorAll(".increment-btn").forEach((btn) => {
          btn.addEventListener("click", function (e) {
            e.stopPropagation();
            const id = this.dataset.id;
            updateQuantity(id, "increment");
          });
        });

        document.querySelectorAll(".order-btn").forEach((btn) => {
          btn.addEventListener("click", function (e) {
            e.stopPropagation();
            const id = this.dataset.id;
            const quantity = prompt("Enter quantity to order:");
            if (quantity && !isNaN(quantity) && quantity > 0) {
              orderProduct(id, quantity);
            } else {
              alert("Please enter a valid quantity.");
            }
          });
        });

        document.querySelectorAll(".delete-btn").forEach((btn) => {
          btn.addEventListener("click", async function (e) {
            e.stopPropagation();
            const id = this.dataset.id;
            try {
              const response = await fetch(`/api/v1/products/${id}`, {
                method: "DELETE",
              });
              if (response.status === 204) {
                alert("Product deleted successfully.");
                window.location.reload();
              } else {
                alert("Error deleting product.");
              }
            } catch (err) {
              console.error("Error deleting product:", err);
            }
          });
        });

        document
          .getElementById("addProductForm")
          .addEventListener("submit", async function (e) {
            e.preventDefault();
            const formData = new FormData(this);
            try {
              const response = await fetch("/api/v1/products", {
                method: "POST",
                body: formData,
              });
              const data = await response.json();
              if (data.status === "success") {
                alert("Product added successfully.");
                window.location.reload();
              } else {
                alert(data.message);
              }
            } catch (err) {
              console.error("Error adding product:", err);
            }
          });

        async function updateQuantity(id, operation) {
          try {
            const response = await fetch(
              `/api/v1/products/${id}/${operation}`,
              {
                method: "PATCH",
                headers: {
                  "Content-Type": "application/json",
                },
              }
            );
            const data = await response.json();
            if (data.status === "success") {
              const item = data.data.product;
              const quantityInput = document.querySelector(
                `.quantity-input[data-id="${item._id}"]`
              );
              quantityInput.value = item.quantity;
            } else {
              alert(data.message);
            }
          } catch (error) {
            console.error("Error updating quantity:", error);
          }
        }

        async function orderProduct(id, quantity) {
          try {
            const response = await fetch(`/api/v1/products/${id}/order`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ quantity }),
            });
            const data = await response.json();
            if (data.status === "success") {
              alert("Order placed successfully.");
              window.location.reload();
            } else {
              alert(data.message);
            }
          } catch (err) {
            console.error("Error placing order:", err);
          }
        }
      });
    </script>
  </body>
</html>
